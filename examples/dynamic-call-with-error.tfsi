$stack-size d100;
from prts import<
    io.log.info, 
    memory.allocate,
    memory.deallocate, 
    this-thread.dynamic-call
>

function hello-world(memory the-message)
 {
    $expose-function hello-world;
    $declare memory null;
    void: prts->io.log.info(variable memory null, immediate eight-bytes d0, variable memory null, variable memory the-message);
    the-message: prts->memory.deallocate();
};

$define-string message ''''Hello World! With extra steps.''''

function main(){
    $main-function main;
    $expose-function main;
    $declare memory message-storage;
    $declare eight-bytes function-address;
    
    message-storage: prts->memory.allocate(size-of eight-bytes message)
    copy-string variable memory message-storage, string message;

    get-function-address variable eight-bytes function-address, function-name hello-world;
    void: prts->this-thread.dynamic-call(
	    variable eight-bytes function-address, 
	    variable memory message-storage,
        variable memory message-storage 
    );;;
};