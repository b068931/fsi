$stack-size d1024;
from prts import <io.log.info, pointer.allocate, pointer.deallocate>

$include libraries/memory.txt;
$redefine symbol-base d48;

function ebyte-to-string(eight-bytes value) {
    $declare pointer result;
    $declare pointer result-copy;

    $declare eight-bytes result-size;
    move variable eight-bytes result-size, immediate eight-bytes d0;

    $declare eight-bytes result-copy-size;
    move variable eight-bytes result-copy-size, immediate eight-bytes d0;

    $declare eight-bytes symbol;

    @repeat;
    divide variable eight-bytes value, immediate eight-bytes d10;
    increment variable eight-bytes result-copy-size;

    result-copy: prts->pointer.allocate(variable eight-bytes result-copy-size)
    memory-copy(variable pointer result-copy, variable pointer result, variable eight-bytes result-size, immediate eight-bytes d0, immediate eight-bytes d0)

    result: prts->pointer.deallocate()

    load-value variable eight-bytes symbol;
    add variable eight-bytes symbol, immediate eight-bytes symbol-base;

    move dereference one-byte result-copy[result-size], variable one-byte symbol;

    move-pointer variable pointer result, variable pointer result-copy;
    move variable eight-bytes result-size, variable eight-bytes result-copy-size;

    compare variable eight-bytes value, immediate eight-bytes d0;

    jump-equal point end;
    jump point repeat;

    @end;
    increment variable eight-bytes result-copy-size;
    result-copy: prts->pointer.allocate(variable eight-bytes result-copy-size)
   
    memory-copy-reversed(variable pointer result-copy, variable pointer result, variable eight-bytes result-size)
    result: prts->pointer.deallocate()

    save-value variable pointer result-copy;
}

function main() {
    $main-function main;
    $declare pointer message;
    $declare pointer null;

    ebyte-to-string(immediate eight-bytes d22082023)
    load-value variable pointer message;

    void: prts->io.log.info(variable pointer null, immediate eight-bytes d0, variable pointer null, variable pointer message)
    message: prts->pointer.deallocate()
}
